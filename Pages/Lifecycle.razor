@page "/lifecycle"

<h3>Lifecycle and Forms</h3>

<p>
    Aufgerufen wird in dieser Reihenfolge:
    <ul>
        <li>
            Parent - SetParameters <br />
            Parent - OnInitialized <br />
            Parent - OnParametersSet
        </li>
        <li>
            Child - SetParameters <br />
            Child - OnInitialized <br />
            Child - OnParametersSet          @* Bis hierhin wird zweimal aufgerufen, falls die Seite zum ersten Mal aufgerufen wird (Einmal Userrequest, einmal SignalR Connection) *@
        </li>
        <li>
            Parent - OnAfterRender <br />   @* Hier wird empfohlen, die Daten zu initialisieren *@
            Child - OnAfterRender <br />
        </li>
    </ul>
</p>


<EditForm Model="p" OnValidSubmit="ValidFormSubmitted">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>
    <p>
        First Name: <br />
        <InputText id="firstname" @bind-Value="p.FirstName"></InputText>
    </p>
    <br />
    <p>
        Last Name: <br />
        <InputText id="lastname" @bind-Value="p.LastName"></InputText>
    </p>
    <br />
    <p>
        Employee Number: <br />
        <InputNumber id="employeenumber" @bind-Value="p.EmployeeNumber"></InputNumber>
    </p>
    <br />
    <p>
        Email: <br />
        <InputText id="email" @bind-Value="p.Email"></InputText>
    </p>
    <input type="submit" value="Submit" />
</EditForm>


@code {

    Person p = new Person();

    public override Task SetParametersAsync(ParameterView parameters)
    {
        Console.WriteLine("blablabla");      // Console.WriteLine benutzen um Sachen zu loggen
        return base.SetParametersAsync(parameters);
    }


    protected override bool ShouldRender()
    {
        return base.ShouldRender();     //wenn hier return false; steht dann wird nicht rerendert
    }

    private void ValidFormSubmitted()
    {

    }


    //using System.ComponentModel.DataAnnotations

    class Person
    {
        [Required]
        [StringLength(100)]
        public string FirstName { get; set; }

        [Required]
        [StringLength(100)]
        public string LastName { get; set; }

        [Required]
        [Range(1, 1000)]
        public int EmployeeNumber { get; set; }

        [Required]
        [EmailAddress]
        public string Email { get; set; }
    }
}
